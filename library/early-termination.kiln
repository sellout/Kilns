;;; boolean operators that execute all tests fully
(trigger* {all (tup ?test-a ?test-b {?r})}
  (new (k resp)
    [k ...]
    (trigger (down {resp ?x})
      (trigger [k _] null)
      {r x})))

;;; To model early termination, you need to keep each parallel computation in a
;;; separate kell, and have each passivate the others upon failure
;;;
;;; I think you need a macro to handle this for variable arity
(trigger* {and (tup ?test-a ?test-b {?r})}
  {sandbox (tup (par test-a
                     test-b
                     (trigger (par {pass} {pass}) {r true})
                     (trigger {fail} {r false}))
                {r})})

;;; run all tests simultaneously. Possibly early-terminate any that do not
;;; need to be run
(trigger* {or (tup ?test-a ?test-b {?r})}
  {sandbox (tup (par test-a
                     test-b
                     (trigger {pass} {r true})
                     (trigger (par {fail} {fail}) {r false}))
                {r})})
