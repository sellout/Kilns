(load "library/replication")
(load "library/utilities")
(load "library/simple-components")
{include-component "library/ordering"}

(trigger* {read-byte (tup ?stream {?rc})}
  {rc (lisp (cl:read-byte stream))})

;; FIXME: need to have an associative array to do lookups for each encoding
(trigger* {character-for-codepoint (tup ?codepoint {ascii} {?rc})}
  {>= (tup codepoint 128
           {rc {error}}
           {rc (lisp (cl:code-char codepoint))})})

(trigger* {read-char (tup ?stream ?encoding {?rc})}
  (new byte
    {read-byte (tup stream {byte})}
    (trigger {byte ?value}
      {character-for-codepoint (tup value encoding {rc})})))

(trigger* {read-item (tup {object ?stream} {?rc})}
  {read-byte (tup {object stream} {rc})})
(trigger* {read-item (tup (par {object ?stream} {encoding ?enc}) {?rc})}
  {read-char (tup (par {object stream} {encoding enc}) {rc})})

(trigger* {open {pathname ?path} {direction ?dir} {stream {?rc}}}
  {rc {object (lisp (cl:open path
                             :direction dir
                             :element-type 'cl:unsigned-byte))}})
(trigger* {open {pathname ?path} {direction ?dir} {encoding ?enc}
                {stream {?rc}}}
  {rc {object (lisp (cl:open path
                             :direction dir
                             :element-type 'cl:character))}
      {encoding enc}})

(trigger* {read-sequence (tup ?stream {?rc})}
  (cont {read-item (tup stream {rc})} {read-sequence (tup ?stream {rc})}))

#|
{include-component "library/streams"}

(new listen
  {new-input-stream {source "some-file"} {listener {listen}}}
  (trigger* {listen ?contents}
    #|do something with contents|#))

(new write
  {new-output-stream {destination "some-file"} {writer {write}}}
  {write "testing writing to stream"})
|#
