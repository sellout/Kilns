(load "library/replication")
(load "library/utilities")

;;; Not much here yet, just some API and half-assed wrapping of IOLib.

(trigger* (up {open-socket (tup (par {connect ?connect}
                                     {address-family ?address-family}
                                     {type ?type})
                                {?rc})})
  {rc (lisp (sockets:open-socket :connect connect
                                 :address-family address-family
                                 :type type))})

(trigger* {socket (tup ?domain ?type ?protocol {?rc})}
  {rc (lisp (sockets:make-socket ))})

(trigger* {bind (tup ?socket ?address)}
  (lisp (sockets:bind)
        null))

(trigger* {listen (tup ?socket ?backlog-size)}
  (lisp (sockets:listen)
        null))

(trigger* {accept (tup ?socket ?address {?new-socket})
  {new-socket (lisp (sockets:accept))})

(trigger* {connect (tup ?socket ?server-address)}
  (lisp (sockets:connect)
        null))

(trigger* {get-host-by-name (tup ?name {?host})}
  {host (lisp (sockets:get-host-by-name))})

(trigger* {get-host-by-address (tup ?address ?type {?host})}
  {host (lisp (sockets:get-host-by-addr))})
