(load "library/replication")
(load "library/simple-sockets")

;;; This is the implementation of the protocol used for distributed Kilns
;;; communication.

;; Continuously read requests off the wire
(trigger* {read-requests (tup ?socket {?rc})}
  (new process
    {read (tup socket {process})}
    (trigger {process ?request}
      (cont {rc {client socket} {contents request}}
            {read-requests (tup socket {rc})}))))

;;; open a socket, then just READ everything that comes over the socket
(new socket
  {open-socket (tup (par {connect :passive}
                         {address-family :internet}
                         {type :stream})
                    {socket})}
  (trigger* {socket ?socket}
    {read-requests (tup socket {request})}))



(trigger* {request {client ?client} {contents {keep-alive}}}
  {write (tup {keep-alive} client)})

(trigger* {request {client ?client}
                   {contents {handshake {path ?path} {version ?version}}}}
  {= (tup version "0.0.1"
          {write (tup {handshake {path {some {path}}} {version "0.0.1"}}
                      client)}
          {write (tup {handshake {error "incompatible version"}}
                      client)})})
