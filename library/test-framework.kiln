(load "library/sandbox")
(load "library/replication")
;; TODO: re-add association-list version, once it's useful and doesn't just
;;       clutter up the state.
;; (load "library/association-lists")

(load "library/simple-components")
{include-component "library/identity"}
{include-component "library/simple-io"}

;;; A very simple test framework. All it _should_ do is collect the results and
;;; let you do what you will with them. However, iterating through the results
;;; is currently confusing me, so I'm also printing each result as it's
;;; determined.

(new (outcomes show-result)
  ;; {new-list {outcomes}}
  ;; (trigger {outcomes (tup {?l} {?get} {?set} {?rem})}
  (trigger* {test-result {should {?name}}
                         {test ?test}
                         {expected-result {?channel ?result}}}
    (new frc
      {sandbox {process test
                        (trigger {channel ?actual-result}
                          {frc {channel actual-result}})}
               {rc {frc}}}
      (trigger {frc ?test-result}
        {= (tup {channel result} test-result
                {show-result {name {success}}}
                {show-result {name {failure {expected {channel result}}
                                            {got test-result}}}}
                ;; {l (tup {set (tup {name} {success}
                ;;                   {show-result {name {success}}})}
                ;;          {show-result})}
                ;; {l (tup {set (tup {name}
                ;;                   {failure {expected {channel result}}
                ;;                            {got test-result}}
                ;;                   {show-result {name {failure {expected {channel result}}
                ;;                                               {got test-result}}}})}
                ;;         {show-result})}
                )})))
           ;; )
  (trigger* {show-result ?result}
    {echo result}))
